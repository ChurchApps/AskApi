{
  "openapi": "3.0.0",
  "info": {
    "title": "Messaging API",
    "description": "API for real-time messaging, notifications, device management, and communication",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": "API base URL"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/blockedIps": {
      "post": {
        "tags": ["Blocked IPs"],
        "summary": "Save blocked IP addresses",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlockedIp"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlockedIp"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blockedIps/clear": {
      "post": {
        "tags": ["Blocked IPs"],
        "summary": "Clear blocked IPs for specific services",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "serviceId": {
                      "type": "string"
                    },
                    "churchId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/connections/{churchId}/{conversationId}": {
      "get": {
        "tags": ["Connections"],
        "summary": "Load connections for a conversation",
        "parameters": [
          {
            "name": "churchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connection"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/connections/tmpSendAlert": {
      "post": {
        "tags": ["Connections"],
        "summary": "Send alert notifications to connections",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "churchId": {
                    "type": "string"
                  },
                  "personId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alert sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deliveryCount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/connections": {
      "post": {
        "tags": ["Connections"],
        "summary": "Save connections",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Connection"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connection"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/connections/setName": {
      "post": {
        "tags": ["Connections"],
        "summary": "Set display name for connections by socket ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "socketId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connection"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/conversations/timeline/ids": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get conversations by IDs for timeline",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated conversation IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations with messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/posts/group/{groupId}": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get posts for a specific group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group conversations with messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/posts": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get posts for user's groups",
        "responses": {
          "200": {
            "description": "User's conversations with messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/start": {
      "post": {
        "tags": ["Conversations"],
        "summary": "Start a new conversation with initial comment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  },
                  "contentType": {
                    "type": "string"
                  },
                  "contentId": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created conversation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          }
        }
      }
    },
    "/conversations": {
      "post": {
        "tags": ["Conversations"],
        "summary": "Save conversations",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/requestPrayer/{churchId}/{conversationId}": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Request prayer for a conversation",
        "parameters": [
          {
            "name": "churchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prayer request conversation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/conversations/current/{churchId}/{contentType}/{contentId}": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get or create current conversation for content",
        "parameters": [
          {
            "name": "churchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current conversation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/conversations/{videoChat}/{connectionId}/{room}": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Send video chat invite to connection",
        "parameters": [
          {
            "name": "videoChat",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "room",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Video chat invite sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/conversations/{contentType}/{contentId}": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get conversations for content",
        "parameters": [
          {
            "name": "contentType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations with messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/cleanup": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Cleanup conversations",
        "responses": {
          "200": {
            "description": "Cleanup complete",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/conversations/{id}": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get conversation by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          }
        }
      }
    },
    "/deviceContents/deviceId/{deviceId}": {
      "get": {
        "tags": ["Device Content"],
        "summary": "Get device content by device ID",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceContent"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/deviceContents": {
      "post": {
        "tags": ["Device Content"],
        "summary": "Save device content",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceContent"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceContent"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceContents/{id}": {
      "delete": {
        "tags": ["Device Content"],
        "summary": "Delete device content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/devices/my": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get current user's active devices",
        "responses": {
          "200": {
            "description": "User's devices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/deviceId/{deviceId}": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get device by device ID with pairing status",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device with pairing status",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Device"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "paired": {
                          "type": "boolean"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/devices/player/{deviceId}": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get player configuration for device",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Player configuration",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "manualPlaylistsApiUrl": {
                          "type": "string"
                        },
                        "libraryApiUrl": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/devices/register": {
      "post": {
        "tags": ["Devices"],
        "summary": "Register a new device",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices": {
      "post": {
        "tags": ["Devices"],
        "summary": "Save devices",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/pair/{pairingCode}": {
      "get": {
        "tags": ["Devices"],
        "summary": "Pair device using pairing code",
        "parameters": [
          {
            "name": "pairingCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pairing result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/enroll": {
      "post": {
        "tags": ["Devices"],
        "summary": "Enroll device for pairing",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device enrolled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          }
        }
      }
    },
    "/devices/tempMessageUser": {
      "post": {
        "tags": ["Devices"],
        "summary": "Send push notification to user's devices",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personId": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "contextId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/devices/tempSendManual": {
      "post": {
        "tags": ["Devices"],
        "summary": "Send push notification to specific FCM token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fcmToken": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "contextId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/devices/{id}": {
      "delete": {
        "tags": ["Devices"],
        "summary": "Delete device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/devices/testNotification/{deviceId}": {
      "get": {
        "tags": ["Devices"],
        "summary": "Send test notification to device",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test notification result",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/messages": {
      "post": {
        "tags": ["Messages"],
        "summary": "Save messages with notification handling",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/send": {
      "post": {
        "tags": ["Messages"],
        "summary": "Send messages (legacy streaming endpoint)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/setCallout": {
      "post": {
        "tags": ["Messages"],
        "summary": "Set message as callout",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": ["Messages"],
        "summary": "Get message by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Messages"],
        "summary": "Delete message",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/messages/conversation/{conversationId}": {
      "get": {
        "tags": ["Messages"],
        "summary": "Load messages for conversation",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/catchup/{churchId}/{conversationId}": {
      "get": {
        "tags": ["Messages"],
        "summary": "Catch up on messages for conversation",
        "parameters": [
          {
            "name": "churchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recent messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/notifications": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Save notifications",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/create": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Create notifications for multiple people",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "peopleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "contentType": {
                    "type": "string"
                  },
                  "contentId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/ping": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Send ping notification to person",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personId": {
                    "type": "string"
                  },
                  "churchId": {
                    "type": "string"
                  },
                  "contentType": {
                    "type": "string"
                  },
                  "contentId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ping notification sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/notifications/tmpEmail": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Trigger daily email notifications",
        "description": "Temporary endpoint for email notifications",
        "responses": {
          "200": {
            "description": "Email notifications processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/notifications/my": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get user's notifications and mark as read",
        "responses": {
          "200": {
            "description": "User's notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/unreadCount": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get count of unread notifications",
        "responses": {
          "200": {
            "description": "Unread notification count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notificationPreferences": {
      "post": {
        "tags": ["Notification Preferences"],
        "summary": "Save notification preferences",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationPreference"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationPreference"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notificationPreferences/my": {
      "get": {
        "tags": ["Notification Preferences"],
        "summary": "Get user's notification preferences",
        "responses": {
          "200": {
            "description": "User's notification preferences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreference"
                }
              }
            }
          }
        }
      }
    },
    "/privateMessages": {
      "get": {
        "tags": ["Private Messages"],
        "summary": "Get all private messages for user and mark as read",
        "responses": {
          "200": {
            "description": "User's private messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivateMessage"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Private Messages"],
        "summary": "Save private messages",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PrivateMessage"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivateMessage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/privateMessages/existing/{personId}": {
      "get": {
        "tags": ["Private Messages"],
        "summary": "Get existing private message conversation with person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Existing private message conversation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PrivateMessage"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/privateMessages/{id}": {
      "get": {
        "tags": ["Private Messages"],
        "summary": "Get private message by ID and clear notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Private message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "BlockedIp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "conversationId": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          }
        }
      },
      "Connection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "conversationId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "timeJoined": {
            "type": "string",
            "format": "date-time"
          },
          "socketId": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "groupId": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "firstPostId": {
            "type": "string"
          },
          "lastPostId": {
            "type": "string"
          },
          "postCount": {
            "type": "number"
          },
          "allowAnonymousPosts": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "fcmToken": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastActiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "deviceInfo": {
            "type": "string"
          },
          "admId": {
            "type": "string"
          },
          "pairingCode": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          }
        }
      },
      "DeviceContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "conversationId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "timeSent": {
            "type": "string",
            "format": "date-time"
          },
          "timeUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "messageType": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "timeSent": {
            "type": "string",
            "format": "date-time"
          },
          "isNew": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          }
        }
      },
      "NotificationPreference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "allowPush": {
            "type": "boolean"
          },
          "emailFrequency": {
            "type": "string",
            "enum": ["immediate", "daily", "weekly", "none"]
          }
        }
      },
      "PrivateMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "fromPersonId": {
            "type": "string"
          },
          "toPersonId": {
            "type": "string"
          },
          "conversationId": {
            "type": "string"
          },
          "notifyPersonId": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "conversation": {
            "$ref": "#/components/schemas/Conversation"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Blocked IPs",
      "description": "IP blocking for security"
    },
    {
      "name": "Connections",
      "description": "WebSocket connection management"
    },
    {
      "name": "Conversations",
      "description": "Group conversations and posts"
    },
    {
      "name": "Device Content",
      "description": "Content synchronization for devices"
    },
    {
      "name": "Devices",
      "description": "Device management and push notifications"
    },
    {
      "name": "Messages",
      "description": "Message handling in conversations"
    },
    {
      "name": "Notifications",
      "description": "Push and email notifications"
    },
    {
      "name": "Notification Preferences",
      "description": "User notification settings"
    },
    {
      "name": "Private Messages",
      "description": "Direct messaging between users"
    }
  ]
}