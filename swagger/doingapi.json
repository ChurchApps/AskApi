{
  "openapi": "3.0.0",
  "info": {
    "title": "Doing API",
    "description": "API for task automation, workflow management, planning, and assignment coordination",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": "API base URL"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/actions/{id}": {
      "get": {
        "tags": ["Actions"],
        "summary": "Get action by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Actions"],
        "summary": "Delete action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actions/automation/{id}": {
      "get": {
        "tags": ["Actions"],
        "summary": "Get actions for automation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actions": {
      "post": {
        "tags": ["Actions"],
        "summary": "Create or update actions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assignments/my": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get current user's assignments",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assignments/{id}": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get assignment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Assignments"],
        "summary": "Delete assignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assignments/plan/ids": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get assignments by plan IDs",
        "parameters": [
          {
            "name": "planIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated plan IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assignments/plan/{planId}": {
      "get": {
        "tags": ["Assignments"],
        "summary": "Get assignments for plan",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assignments/accept/{id}": {
      "post": {
        "tags": ["Assignments"],
        "summary": "Accept assignment",
        "description": "Must be assigned to current user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assignment accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          }
        }
      }
    },
    "/assignments/decline/{id}": {
      "post": {
        "tags": ["Assignments"],
        "summary": "Decline assignment",
        "description": "Must be assigned to current user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assignment declined",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          }
        }
      }
    },
    "/assignments": {
      "post": {
        "tags": ["Assignments"],
        "summary": "Create or update assignments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/automations/check": {
      "get": {
        "tags": ["Automations"],
        "summary": "Trigger automation check",
        "responses": {
          "200": {
            "description": "Automation check triggered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/automations/{id}": {
      "get": {
        "tags": ["Automations"],
        "summary": "Get automation by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Automation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Automations"],
        "summary": "Delete automation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/automations": {
      "get": {
        "tags": ["Automations"],
        "summary": "Get all automations",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Automation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Automations"],
        "summary": "Create or update automations",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Automation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Automation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blockoutDates/ids": {
      "get": {
        "tags": ["Blockout Dates"],
        "summary": "Get blockout dates by IDs",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlockoutDate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blockoutDates/my": {
      "get": {
        "tags": ["Blockout Dates"],
        "summary": "Get current user's blockout dates",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlockoutDate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blockoutDates/upcoming": {
      "get": {
        "tags": ["Blockout Dates"],
        "summary": "Get upcoming blockout dates",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlockoutDate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blockoutDates/{id}": {
      "get": {
        "tags": ["Blockout Dates"],
        "summary": "Get blockout date by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockoutDate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Blockout Dates"],
        "summary": "Delete blockout date",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/blockoutDates": {
      "post": {
        "tags": ["Blockout Dates"],
        "summary": "Create or update blockout dates",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlockoutDate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlockoutDate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conditions/{id}": {
      "get": {
        "tags": ["Conditions"],
        "summary": "Get condition by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Conditions"],
        "summary": "Delete condition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/conditions/automation/{id}": {
      "get": {
        "tags": ["Conditions"],
        "summary": "Get conditions for automation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Condition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conditions": {
      "post": {
        "tags": ["Conditions"],
        "summary": "Create or update conditions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Condition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conjunctions/{id}": {
      "get": {
        "tags": ["Conjunctions"],
        "summary": "Get conjunction by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conjunction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Conjunctions"],
        "summary": "Delete conjunction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/conjunctions/automation/{id}": {
      "get": {
        "tags": ["Conjunctions"],
        "summary": "Get conjunctions for automation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conjunction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conjunctions": {
      "post": {
        "tags": ["Conjunctions"],
        "summary": "Create or update conjunctions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Conjunction"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conjunction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plans/presenter": {
      "get": {
        "tags": ["Plans"],
        "summary": "Get plans for next 7 days",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plans/ids": {
      "get": {
        "tags": ["Plans"],
        "summary": "Get plans by IDs",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated plan IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plans/{id}": {
      "get": {
        "tags": ["Plans"],
        "summary": "Get plan by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Plans"],
        "summary": "Delete plan and all related data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/plans": {
      "get": {
        "tags": ["Plans"],
        "summary": "Get all plans",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Plans"],
        "summary": "Create or update plans",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plans/autofill/{id}": {
      "post": {
        "tags": ["Plans"],
        "summary": "Auto-fill plan assignments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teams": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "positionId": {
                          "type": "string"
                        },
                        "personIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plan auto-filled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          }
        }
      }
    },
    "/plans/copy/{id}": {
      "post": {
        "tags": ["Plans"],
        "summary": "Copy plan with new service date",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plan copied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          }
        }
      }
    },
    "/planItems/ids": {
      "get": {
        "tags": ["Plan Items"],
        "summary": "Get plan items by IDs",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/planItems/{id}": {
      "get": {
        "tags": ["Plan Items"],
        "summary": "Get plan item by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Plan Items"],
        "summary": "Delete plan item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/planItems/presenter/{churchId}/{planId}": {
      "get": {
        "tags": ["Plan Items"],
        "summary": "Get hierarchical plan items for presenter",
        "parameters": [
          {
            "name": "churchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanItem"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/planItems/plan/{planId}": {
      "get": {
        "tags": ["Plan Items"],
        "summary": "Get hierarchical plan items for plan",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/planItems/sort": {
      "post": {
        "tags": ["Plan Items"],
        "summary": "Reorder plan items",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        }
      }
    },
    "/planItems": {
      "post": {
        "tags": ["Plan Items"],
        "summary": "Create or update plan items",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlanItem"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/positions/ids": {
      "get": {
        "tags": ["Positions"],
        "summary": "Get positions by IDs",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/positions/{id}": {
      "get": {
        "tags": ["Positions"],
        "summary": "Get position by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Positions"],
        "summary": "Delete position",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/positions/plan/ids": {
      "get": {
        "tags": ["Positions"],
        "summary": "Get positions by plan IDs",
        "parameters": [
          {
            "name": "planIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated plan IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/positions/plan/{planId}": {
      "get": {
        "tags": ["Positions"],
        "summary": "Get positions for plan",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/positions": {
      "post": {
        "tags": ["Positions"],
        "summary": "Create or update positions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/timeline": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get timeline tasks for current user",
        "parameters": [
          {
            "name": "taskIds",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated task IDs (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/closed": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get closed tasks for current user",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/directoryUpdate/{personId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get directory update tasks for person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get open tasks for current user",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create or update tasks",
        "description": "Handles directory updates when type=directoryUpdate",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional task type"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/loadForGroups": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Get tasks for groups",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/times/plans": {
      "get": {
        "tags": ["Times"],
        "summary": "Get times by plan IDs",
        "parameters": [
          {
            "name": "planIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated plan IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/times/all": {
      "get": {
        "tags": ["Times"],
        "summary": "Get all times",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/times/{id}": {
      "get": {
        "tags": ["Times"],
        "summary": "Get time by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Time"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Times"],
        "summary": "Delete time",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/times/plan/{planId}": {
      "get": {
        "tags": ["Times"],
        "summary": "Get times for plan",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/times": {
      "post": {
        "tags": ["Times"],
        "summary": "Create or update times",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Time"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Time"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Action": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "automationId": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "Assignment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "positionId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["Unconfirmed", "Confirmed", "Declined"]
          },
          "notified": {
            "type": "boolean"
          }
        }
      },
      "Automation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "BlockoutDate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Condition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "automationId": {
            "type": "string"
          },
          "conditionType": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "Conjunction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "automationId": {
            "type": "string"
          },
          "conjunctionType": {
            "type": "string",
            "enum": ["AND", "OR"]
          }
        }
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "ministryId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "serviceDate": {
            "type": "string",
            "format": "date"
          },
          "notes": {
            "type": "string"
          },
          "serviceOrder": {
            "type": "string"
          }
        }
      },
      "PlanItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "itemType": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          },
          "data": {
            "type": "object"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanItem"
            }
          }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "taskType": {
            "type": "string"
          },
          "taskNumber": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateClosed": {
            "type": "string",
            "format": "date-time"
          },
          "associatedWithType": {
            "type": "string"
          },
          "associatedWithId": {
            "type": "string"
          },
          "associatedWithLabel": {
            "type": "string"
          },
          "createdByType": {
            "type": "string"
          },
          "createdById": {
            "type": "string"
          },
          "createdByLabel": {
            "type": "string"
          },
          "assignedToType": {
            "type": "string"
          },
          "assignedToId": {
            "type": "string"
          },
          "assignedToLabel": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["Open", "Closed"]
          },
          "automationId": {
            "type": "string"
          },
          "conversationId": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "Time": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "churchId": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "time"
          },
          "sort": {
            "type": "number"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Actions",
      "description": "Automation actions"
    },
    {
      "name": "Assignments",
      "description": "Plan assignments and confirmations"
    },
    {
      "name": "Automations",
      "description": "Workflow automation management"
    },
    {
      "name": "Blockout Dates",
      "description": "Personal availability management"
    },
    {
      "name": "Conditions",
      "description": "Automation conditions"
    },
    {
      "name": "Conjunctions",
      "description": "Logical conjunctions for automation"
    },
    {
      "name": "Plans",
      "description": "Service planning and coordination"
    },
    {
      "name": "Plan Items",
      "description": "Plan content and structure"
    },
    {
      "name": "Positions",
      "description": "Service positions and roles"
    },
    {
      "name": "Tasks",
      "description": "Task management and tracking"
    },
    {
      "name": "Times",
      "description": "Service timing and schedule"
    }
  ]
}